#!/bin/bash

# Paths to the theme directories and configuration files
wofi_source_dir="${HOME}/.config/wofi"
kitty_source_dir="${HOME}/.config/kitty"
current_theme_file="${HOME}/.config/kitty/current_theme.txt"
rofi_dark_script="${HOME}/.config/hypr/scripts/rofi_light_dark/rofi_dark.sh"
rofi_light_script="${HOME}/.config/hypr/scripts/rofi_light_dark/rofi_light.sh"
gtk_css_main_dir="${HOME}/.config/gtk-4.0"
eww_main_dir="${HOME}/.config/eww"
yuck_file="${HOME}/.config/eww/modules/quick_settings.yuck"

# GTK-4.0 paths
gtk_light_css="$gtk_css_main_dir/light/gtk.css"
gtk_light_dark_css="$gtk_css_main_dir/light/gtk-dark.css"
gtk_dark_css="$gtk_css_main_dir/dark/gtk.css"
gtk_dark_dark_css="$gtk_css_main_dir/dark/gtk-dark.css"

# Eww paths
eww_light_scss="$eww_main_dir/scss/light/eww.scss"
eww_dark_scss="$eww_main_dir/scss/dark/eww.scss"

# Ensure Eww isn't abruptly terminated
if pgrep eww > /dev/null; then
  eww kill
fi

# Run toggle_control_center.sh at the start
${HOME}/.config/eww/scripts/toggle_control_center.sh

# Check if the current_theme.txt file exists, if not, create it with the default theme
if [[ ! -f "$current_theme_file" ]]; then
  echo "light" > "$current_theme_file"
fi

# Read the current theme from the file
current_theme=$(cat "$current_theme_file")

# Function to update `quick_settings.yuck`
function update_quick_settings_yuck() {
  local theme="$1"
  local new_condition

  if [[ "$theme" == "light" ]]; then
    new_condition="{current_theme == \"dark\"}"
  else
    new_condition="{current_theme == \"light\"}"
  fi

  # Update only the theme widget in `quick_settings.yuck`
  sed -i -E "/defwidget theme \[\]/,/^\)/s/:condition \{current_theme == \".*\"\}/:condition $new_condition/" "$yuck_file"
  echo "quick_settings.yuck updated for theme widget with condition $new_condition."
}

# Function to switch themes
function switch_theme() {
  local theme="$1"

  # Switch Wofi theme
  if [[ -d "$wofi_source_dir/$theme" ]]; then
    cp "$wofi_source_dir/$theme/style.css" "$wofi_source_dir/style.css"
    echo "Wofi: Switched to $theme theme"
  else
    echo "Wofi theme $theme not found"
  fi

  # Switch Kitty theme
  if [[ -f "$kitty_source_dir/kitty.conf" && -f "$kitty_source_dir/$theme/kitty.conf" ]]; then
    sed -i '/#BEGIN_COLORS/,/#END_COLORS/d' "$kitty_source_dir/kitty.conf"
    echo -e "\n#BEGIN_COLORS\n$(cat $kitty_source_dir/$theme/kitty.conf)\n#END_COLORS" >> "$kitty_source_dir/kitty.conf"
    echo "Kitty: Switched to $theme theme"
  else
    echo "Kitty configuration files not found"
  fi

  # Switch GTK-4.0 theme
  if [[ "$theme" == "light" ]]; then
    cp "$gtk_light_css" "$gtk_css_main_dir/gtk.css"
    cp "$gtk_light_dark_css" "$gtk_css_main_dir/gtk-dark.css"
  else
    cp "$gtk_dark_css" "$gtk_css_main_dir/gtk.css"
    cp "$gtk_dark_dark_css" "$gtk_css_main_dir/gtk-dark.css"
  fi
  echo "GTK-4.0: Switched to $theme theme"

  # Switch Eww theme
  if [[ "$theme" == "light" ]]; then
    cp "$eww_light_scss" "$eww_main_dir/eww.scss"
  else
    cp "$eww_dark_scss" "$eww_main_dir/eww.scss"
  fi
  echo "Eww: Switched to $theme theme"

  # Apply GTK settings via gsettings
  if [[ "$theme" == "light" ]]; then
    gsettings set org.gnome.desktop.interface icon-theme 'Tela-circle-light'
    gsettings set org.gnome.desktop.interface gtk-theme 'Material-wally'
    gsettings set org.gnome.desktop.interface color-scheme 'prefer-light'
    bash "$rofi_light_script"
  else
    gsettings set org.gnome.desktop.interface icon-theme 'Tela-circle-dark'
    gsettings set org.gnome.desktop.interface gtk-theme 'Material-wal'
    gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
    bash "$rofi_dark_script"
  fi

  # Save the new theme to the file
  echo "$theme" > "$current_theme_file"

  # Update quick_settings.yuck
  update_quick_settings_yuck "$theme"

  # Reload Eww to apply changes
  ${HOME}/.config/eww/scripts/start.sh
  echo "Eww: Reloaded to apply the changes."
}

# Toggle theme logic
case "$current_theme" in
  "light")
    switch_theme "dark"
    ;;
  "dark")
    switch_theme "light"
    ;;
  *)
    switch_theme "dark" # Default to dark if the current theme is unknown
    ;;
esac
